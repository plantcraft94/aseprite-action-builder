name: Auto build Aseprite
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  auto-build:
    name: Auto build Aseprite for Windows x64
    runs-on: windows-2022
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Check latest Aseprite release
        id: check_release
        run: |
          # Get the latest Aseprite release from GitHub API
          $aseprite_latest = Invoke-RestMethod -Uri "https://api.github.com/repos/aseprite/aseprite/releases/latest"
          $aseprite_version = $aseprite_latest.tag_name
          
          # Get our latest release version from GitHub API
          $our_latest_release = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/latest" -ErrorAction SilentlyContinue
          $our_latest_version = $our_latest_release.tag_name
          
          echo "Aseprite latest version: $aseprite_version"
          echo "Our latest built version: $our_latest_version"
          
          # Check if version contains "beta"
          if ($aseprite_version -like "*beta*") {
            echo "Latest version is a beta release, skipping build"
            echo "continue_build=false" >> $env:GITHUB_OUTPUT
          }
          # Compare versions and set the output
          elseif ($null -eq $our_latest_version -or $aseprite_version -ne $our_latest_version) {
            echo "New Aseprite version available, continuing build"
            echo "continue_build=true" >> $env:GITHUB_OUTPUT
            echo "version=$aseprite_version" >> $env:GITHUB_OUTPUT
          } else {
            echo "Already built the latest Aseprite version, skipping build"
            echo "continue_build=false" >> $env:GITHUB_OUTPUT
          }
      
      - name: Install Ninja
        if: steps.check_release.outputs.continue_build == 'true'
        run: |
          choco install ninja -y
      
      - name: Install Python requirements
        if: steps.check_release.outputs.continue_build == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Download Aseprite
        if: steps.check_release.outputs.continue_build == 'true'
        run: |
          python download.py
      
      - name: Setup MSVC Developer Command Prompt
        if: steps.check_release.outputs.continue_build == 'true'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
      
      - name: Build Aseprite
        if: steps.check_release.outputs.continue_build == 'true'
        run: |
          mkdir build
          cd build
          cmake "../src/aseprite" -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DLAF_BACKEND=skia -DSKIA_DIR="../src/skia" -DSKIA_LIBRARY_DIR="../src/skia/out/Release-x64" -DSKIA_LIBRARY="../src/skia/out/Release-x64/skia.lib"
          ninja aseprite
          copy "C:/Windows/System32/libcrypto-1_1-x64.dll" ./bin
      
      - name: Zip Aseprite
        if: steps.check_release.outputs.continue_build == 'true'
        run: |
          cd build/bin
          7z a ../../Aseprite-Windows-x64-${{ steps.check_release.outputs.version }}.zip *
      
      - name: GH Release
        if: steps.check_release.outputs.continue_build == 'true'
        uses: softprops/action-gh-release@v2
        with:
          name: Aseprite-Windows-x64-${{ steps.check_release.outputs.version }}
          tag_name: ${{ steps.check_release.outputs.version }}
          files: |
            Aseprite-Windows-x64-${{ steps.check_release.outputs.version }}.zip
